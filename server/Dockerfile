FROM node:16-alpine

WORKDIR /usr/app

COPY package*.json .

RUN npm install -g pm2

RUN npm install

COPY . .

ARG NODE_ENV
ARG PORT
ARG API_URL
ARG APP_URL
ARG CORS_ORIGINS
ARG BCRYPT_ROUNDS
ARG DATABASE_HOST
ARG DATABASE_NAME
ARG DATABASE_DIALECT
ARG DATABASE_USERNAME
ARG DATABASE_PASSWORD
ARG DATABASE_STORAGE
ARG JWT_SECRET
ARG EMAIL_PREVIEW
ARG EMAIL_SEND
ARG EMAIL_FROM
ARG EMAIL_SMTP_HOST
ARG EMAIL_SMTP_PORT
ARG EMAIL_SMTP_USERNAME
ARG EMAIL_SMTP_PASSWORD

ENV NODE_ENV=$NODE_ENV
ENV PORT=$PORT
ENV API_URL=$API_URL
ENV APP_URL=$APP_URL
ENV CORS_ORIGINS=$CORS_ORIGINS
ENV BCRYPT_ROUNDS=$BCRYPT_ROUNDS
ENV DATABASE_HOST=$DATABASE_HOST
ENV DATABASE_NAME=$DATABASE_NAME
ENV DATABASE_DIALECT=$DATABASE_DIALECT
ENV DATABASE_USERNAME=$DATABASE_USERNAME
ENV DATABASE_PASSWORD=$DATABASE_PASSWORD
ENV DATABASE_STORAGE=$DATABASE_STORAGE
ENV JWT_SECRET=$JWT_SECRET
ENV EMAIL_PREVIEW=$EMAIL_PREVIEW
ENV EMAIL_SEND=$EMAIL_SEND
ENV EMAIL_FROM=$EMAIL_FROM
ENV EMAIL_SMTP_HOST=$EMAIL_SMTP_HOST
ENV EMAIL_SMTP_PORT=$EMAIL_SMTP_PORT
ENV EMAIL_SMTP_USERNAME=$EMAIL_SMTP_USERNAME
ENV EMAIL_SMTP_PASSWORD=$EMAIL_SMTP_PASSWORD

# Save all ENV_VARS into .env file
RUN echo "" > .env
RUN for s in $(echo $ENV_VARS | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do echo $s >> .env; done

RUN npm run build

EXPOSE $PORT

ENTRYPOINT ["pm2-runtime", "ecosystem.config.js"]
